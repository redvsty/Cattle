---
# tasks file for nginx
- name: check deployer user
  action: user name=deployer state=present

- name: Install required packages
  block:
    - name: Install required packages (YUM)
      yum:
        name: "{{ install_packages }}"
        state: present
  rescue:
    - name: Install required packages (APT)
      apt:
        name: "{{ install_packages }}"
        state: present
    
- name: Create opt package
  file: path=/opt/package state=directory mode=0775

- name: Clone a Letsencrypt repository
  git:
    repo: https://github.com/letsencrypt/letsencrypt
    dest: /opt/package/letsencrypt
    clone: yes
    update: yes

- name: Download Letsencrypt
  get_url:
    url: https://raw.githubusercontent.com/certbot/certbot/7f0fa18c570942238a7de73ed99945c3710408b4/letsencrypt-auto-source/letsencrypt-auto
    dest: /opt/package/letsencrypt/certbot-auto

- name: Change permission of certbot-auto
  ansible.builtin.file:
    path: /opt/package/letsencrypt/certbot-auto
    owner: root
    group: root
    mode: '0755'

- name: Create directory /var/www/letsencrypt/.well-known/acme-challenge/
  file:
    path: /var/www/letsencrypt/.well-known/acme-challenge/
    state: director

- name: Download nginx source code
  ansible.builtin.get_url:
    url: "http://nginx.org/download/nginx-{{ nginx_version }}.tar.gz"
    dest: /opt/package/nginx-{{ nginx_version }}.tar.gz
    mode: '0644'

- name: Extract nginx source code
  ansible.builtin.unarchive:
    src: "/opt/package/nginx-{{ nginx_version }}.tar.gz"
    dest: /usr/local
    remote_src: true
    owner: root
    group: root

- name: Rename nginx
  become: true
  shell: |
    mv /usr/local/nginx-{{nginx_version}} /usr/local/nginx

- name: Configure nginx
  command: |
    ./configure --prefix=/usr/local/nginx --conf-path=/usr/local/nginx/nginx.conf --with-http_ssl_module --with-http_realip_module --with-http_addition_module --with-http_sub_module --with-http_dav_module --with-http_flv_module --with-http_mp4_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_random_index_module --with-http_secure_link_module --with-http_stub_status_module --with-http_auth_request_module --with-mail --with-mail_ssl_module --with-file-aio
  args:
    chdir: "/usr/local/nginx"
  become: true

- name: Build nginx
  make:
    chdir: "/usr/local/nginx"

- name: Make install
  make:
    chdir: "/usr/local/nginx"
    params:
      prefix: "/usr/local/nginx"
    target: install

- name: Create Folder trx
  file:
    path: /var/log/trx/
    state: directory
    mode: 0755

- name: create file nginx-error.log
  file:
    path: /var/log/trx/nginx-error.log
    state: touch
    mode: 0755

- name: ensure file exists
  copy:
    content: ""
    dest: /usr/local/nginx/conf/retno.conf
    owner: root
    mode: 0775

- name: Create retno.conf
  template:
    src: templates/retno.conf.j2
    dest: /usr/local/nginx/conf/retno.conf

- name: Nginx.conf
  template:
    src: templates/nginx.conf.j2
    dest: /usr/local/nginx/conf/nginx.conf

- name: Delete EOF
  lineinfile: dest=/usr/local/nginx/conf/nginx.conf
     state=absent 
     regexp='EOF'

- name: Create conf.d Dir
  file: path=/usr/local/nginx/conf.d state=directory mode=0775

- name: Create a symbolic link
  ansible.builtin.file:
    src: /usr/local/nginx/sbin/nginx
    dest: /usr/bin/nginx
    owner: root
    group: root
    state: link

- name: create ssl directory
  file:
    path: /usr/local/nginx/ssl
    state: directory
    mode: 0755

- name: insert nginx service in systemd
  template:
    src: templates/nginx.service.j2
    dest: /etc/systemd/system/nginx.service  

- name: Create Conf.d directory
  file:
    path: /usr/local/nginx/conf.d
    state: directory

- name: Restart daemon
  ansible.builtin.systemd:
    daemon_reload: true

- name: Start nginx
  service: 
    name: nginx
    state: started